let t=0;const i=window.requestAnimationFrame,e=window.cancelAnimationFrame;class s{constructor(t=Infinity){this.callbacks=[],this.fps=t,this.time=0,this.lastTickDate=performance.now()}get executionTime(){return 1e3/this.fps}dispatch(t,i){for(let e=0;e<this.callbacks.length;e++)this.callbacks[e].callback(t,i)}raf(t,i){if(this.time+=i,Infinity===this.fps)this.dispatch(t,i);else if(this.time>=this.executionTime){this.time=this.time%this.executionTime;const i=t-this.lastTickDate;this.lastTickDate=t,this.dispatch(t,i)}}add({callback:i,priority:e}){"function"!=typeof i&&console.error("Tempus.add: callback is not a function");const s=t++;return this.callbacks.push({callback:i,priority:e,uid:s}),this.callbacks.sort((t,i)=>t.priority-i.priority),()=>this.remove(s)}remove(t){this.callbacks=this.callbacks.filter(({uid:i})=>t!==i)}}var a="undefined"!=typeof window&&new class{constructor(){this.raf=t=>{requestAnimationFrame(this.raf,!0);const i=t-this.time;this.time=t;for(const e of Object.values(this.framerates))e.raf(t,i)},this.framerates={},this.time=performance.now(),requestAnimationFrame(this.raf)}add(t,{priority:i=0,fps:e=Infinity}={}){if("number"==typeof e)return this.framerates[e]||(this.framerates[e]=new s(e)),this.framerates[e].add({callback:t,priority:i})}patch(){window.requestAnimationFrame=(t,{priority:e=0,fps:s=Infinity}={})=>t!==this.raf&&t.toString().includes("requestAnimationFrame(")?(t.__tempusPatched||(t.__tempusPatched=!0,t.__tempusUnsubscribe=this.add(t,{priority:e,fps:s})),t.__tempusUnsubscribe):i(t),window.cancelAnimationFrame=t=>("function"==typeof t&&(null==t||t()),e(t))}unpatch(){window.requestAnimationFrame=i,window.cancelAnimationFrame=e}};export{a as default};
//# sourceMappingURL=tempus.modern.mjs.map
