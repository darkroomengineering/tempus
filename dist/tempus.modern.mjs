let t=0;class i{constructor(t=Infinity){this.callbacks=[],this.fps=t,this.time=0,this.lastTickDate=performance.now()}get executionTime(){return 1e3/this.fps}dispatch(t,i){for(let s=0;s<this.callbacks.length;s++)this.callbacks[s].callback(t,i)}raf(t,i){if(this.time+=i,Infinity===this.fps)this.dispatch(t,i);else if(this.time>=this.executionTime){this.time=this.time%this.executionTime;const i=t-this.lastTickDate;this.lastTickDate=t,this.dispatch(t,i)}}add({callback:i,priority:s}){const e=t++;return this.callbacks.push({callback:i,priority:s,uid:e}),this.callbacks.sort((t,i)=>t.priority-i.priority),()=>this.remove(e)}remove(t){this.callbacks=this.callbacks.filter(({uid:i})=>t!==i)}}var s="undefined"!=typeof window&&new class{constructor(){this.raf=t=>{requestAnimationFrame(this.raf,!0);const i=t-this.time;this.time=t;for(const s of Object.values(this.framerates))s.raf(t,i)},this.framerates={},this.time=performance.now(),requestAnimationFrame(this.raf)}add(t,{priority:s=0,fps:e=Infinity}={}){if("number"==typeof e)return this.framerates[e]||(this.framerates[e]=new i(e)),this.framerates[e].add({callback:t,priority:s})}patch(){const t=window.requestAnimationFrame,i=window.cancelAnimationFrame;window.requestAnimationFrame=(i,{priority:s=0,fps:e=Infinity}={})=>i!==this.raf&&i.toString().includes("requestAnimationFrame(")?(i.__tempusPatched||(i.__tempusPatched=!0,i.__tempusUnsubscribe=this.add(i,{priority:s,fps:e})),i.__tempusUnsubscribe):t(i),window.cancelAnimationFrame=t=>("function"==typeof t&&(null==t||t()),i(t))}};export{s as default};
//# sourceMappingURL=tempus.modern.mjs.map
