{"version":3,"sources":["../packages/core/src/uid.ts","../packages/core/src/tempus.ts","../packages/core/browser.ts"],"sourcesContent":["let index = 0\r\n\r\nexport function getUID(): number {\r\n  return index++\r\n}\r\n","// Infinity = max FPS (system default)\r\n\r\nimport type { TempusCallback, TempusOptions, UID } from './types'\r\nimport { getUID } from './uid'\r\n\r\nconst isClient = typeof window !== 'undefined'\r\n\r\nconst originalRAF = (isClient &&\r\n  window.requestAnimationFrame) as typeof window.requestAnimationFrame\r\nconst originalCancelRAF = (isClient &&\r\n  window.cancelAnimationFrame) as typeof window.cancelAnimationFrame\r\n\r\nclass Framerate {\r\n  callbacks: { callback: TempusCallback; priority: number; uid: UID }[]\r\n  fps: number\r\n  time: number\r\n  lastTickDate: number\r\n\r\n  constructor(fps = Number.POSITIVE_INFINITY) {\r\n    this.callbacks = []\r\n    this.fps = fps\r\n    this.time = 0\r\n    this.lastTickDate = performance.now()\r\n  }\r\n\r\n  get executionTime() {\r\n    return 1000 / this.fps\r\n  }\r\n\r\n  dispatch(time: number, deltaTime: number) {\r\n    for (let i = 0; i < this.callbacks.length; i++) {\r\n      this.callbacks[i]?.callback(time, deltaTime)\r\n    }\r\n  }\r\n\r\n  raf(time: number, deltaTime: number) {\r\n    this.time += deltaTime\r\n\r\n    if (this.fps === Number.POSITIVE_INFINITY) {\r\n      this.dispatch(time, deltaTime)\r\n    } else if (this.time >= this.executionTime) {\r\n      this.time = this.time % this.executionTime\r\n      const deltaTime = time - this.lastTickDate\r\n      this.lastTickDate = time\r\n\r\n      this.dispatch(time, deltaTime)\r\n    }\r\n  }\r\n\r\n  add({ callback, priority }: { callback: TempusCallback; priority: number }) {\r\n    if (typeof callback !== 'function')\r\n      console.error('Tempus.add: callback is not a function')\r\n\r\n    const uid = getUID()\r\n    this.callbacks.push({ callback, priority, uid })\r\n    this.callbacks.sort((a, b) => a.priority - b.priority)\r\n\r\n    return () => this.remove(uid)\r\n  }\r\n\r\n  remove(uid: UID) {\r\n    this.callbacks = this.callbacks.filter(({ uid: u }) => uid !== u)\r\n  }\r\n}\r\n\r\nclass TempusImpl {\r\n  private framerates: Record<number, Framerate>\r\n  time: number\r\n\r\n  constructor() {\r\n    this.framerates = {}\r\n    this.time = isClient ? performance.now() : 0\r\n\r\n    if (!isClient) return\r\n\r\n    requestAnimationFrame(this.raf)\r\n  }\r\n\r\n  add(\r\n    callback: TempusCallback,\r\n    { priority = 0, fps = Number.POSITIVE_INFINITY }: TempusOptions = {}\r\n  ) {\r\n    if (!isClient) return\r\n\r\n    if (typeof fps === 'number') {\r\n      if (!this.framerates[fps]) this.framerates[fps] = new Framerate(fps)\r\n\r\n      return this.framerates[fps].add({ callback, priority })\r\n    }\r\n  }\r\n\r\n  private raf = (time: number) => {\r\n    if (!isClient) return\r\n\r\n    // @ts-ignore\r\n    requestAnimationFrame(this.raf, true)\r\n\r\n    const deltaTime = time - this.time\r\n    this.time = time\r\n\r\n    for (const framerate of Object.values(this.framerates)) {\r\n      framerate.raf(time, deltaTime)\r\n    }\r\n  }\r\n\r\n  patch() {\r\n    if (!isClient) return\r\n\r\n    window.requestAnimationFrame = (\r\n      callback,\r\n      { priority = 0, fps = Number.POSITIVE_INFINITY } = {}\r\n    ) => {\r\n      if (\r\n        callback === this.raf ||\r\n        !callback.toString().includes('requestAnimationFrame(')\r\n      ) {\r\n        return originalRAF(callback)\r\n      }\r\n\r\n      // @ts-ignore\r\n      if (!callback.__tempusPatched) {\r\n        // @ts-ignore\r\n        callback.__tempusPatched = true\r\n        // @ts-ignore\r\n        callback.__tempusUnsubscribe = this.add(callback, { priority, fps })\r\n      }\r\n\r\n      // @ts-ignore\r\n      return callback.__tempusUnsubscribe\r\n    }\r\n\r\n    window.cancelAnimationFrame = (callback: number | (() => void)) => {\r\n      if (typeof callback === 'function') {\r\n        callback?.()\r\n        return\r\n      }\r\n\r\n      return originalCancelRAF(callback)\r\n    }\r\n  }\r\n\r\n  unpatch() {\r\n    if (!isClient) return\r\n\r\n    window.requestAnimationFrame = originalRAF\r\n    window.cancelAnimationFrame = originalCancelRAF\r\n  }\r\n}\r\n\r\nconst Tempus = new TempusImpl()\r\n\r\nexport { Tempus }\r\n","// This file serves as an entry point for the package\r\nimport { Tempus } from './src/tempus'\r\nglobalThis.Tempus = Tempus\r\n"],"mappings":"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","names":["index","getUID","isClient","originalRAF","originalCancelRAF","Framerate","fps","time","deltaTime","i","callback","priority","uid","getUID","a","b","u","TempusImpl","framerate","Tempus","Tempus"]}